# -*- coding: utf-8 -*-
"""
Created on Thu Sep 12 18:20:37 2019

@author: acer a53
"""
import numpy as np
n=4
m=5
count=0
optimal_solution=0
matrix=np.array([(19,30,50,10,7),(70,30,40,60,9),(40,8,70,20,18),(5,8,7,14,34)])
print(matrix)
c=matrix[0:n-1,0:m-1]
dem=matrix[n-1,0:m-1]
sup=matrix[0:n-1,m-1]
print('cost matrix : \n',c,'\ndemand : ',dem,'\nSupply : ',sup)
"""condition for balanced matrix"""
(i,j,sum1)=(0,0,0)
count=0
while(i<n-1 and j<m-1):
    if (sup[i]<dem[j]):
      sum1+=c[i][j]*sup[i];
      dem[j]-=sup[i];
      i+=1;
    elif(sup[i]>dem[j]):
        sum1+=c[i][j]*dem[j];
        sup[i]-=dem[j];
        j+=1;
    elif(sup[i]==dem[j]):
        sum1+=c[i][j]*dem[j];
        i+=1;             
        j+=1;
    
print("Minimum transportation cost (NCM): ",sum1);
